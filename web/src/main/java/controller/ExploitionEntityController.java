package controller;

import entity.ExploitionEntity;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.servlet.ModelAndView;
import service.ExploitionEntityManager;

import java.util.Optional;

@Controller
public class ExploitionEntityController {

    @Autowired
    ExploitionEntityManager exploiEntityManager;

    @GetMapping("/exploitionEntity/create")
    public ModelAndView showCreateForm() {
        ModelAndView modelAndView = new ModelAndView("");
        modelAndView.addObject("exploitionEntity",new ExploitionEntity());
        return modelAndView;
    }


    @PostMapping("/exploitionEntity/create")
    public ModelAndView create(@ModelAttribute("exploitionEntity") ExploitionEntity exploitionEntity) {
        exploiEntityManager.saveExploition(exploitionEntity);
        ModelAndView modelAndView = new ModelAndView("");
        modelAndView.addObject("exploitionEntity", exploitionEntity);
        modelAndView.addObject("message","success");
        return modelAndView;
    }

    @RequestMapping(value = "/exploitionEntity")
    public ModelAndView list(Pageable pageable) {
        Page<ExploitionEntity> list = exploiEntityManager.getAllExploition(pageable);
        ModelAndView modelAndView = new ModelAndView("");
        modelAndView.addObject("list", list);
        return modelAndView;
    }

    @GetMapping("/exploitionEntity/edit/{id}")
    public ModelAndView showEditForm(@PathVariable String id) {
        ExploitionEntity exploitionEntity = exploiEntityManager.findById(id);
        ModelAndView modelAndView = new ModelAndView("");

        modelAndView.addObject("exploitionEntity", exploitionEntity);
        return modelAndView;
    }


    @PostMapping("/exploitionEntity/edit")
    public ModelAndView edit(@ModelAttribute("exploitionEntity") ExploitionEntity exploitionEntity) {
        exploiEntityManager.saveExploition(exploitionEntity);
        ModelAndView modelAndView = new ModelAndView("");
        modelAndView.addObject("exploitionEntity",exploitionEntity);
        modelAndView.addObject("message","Success");
        return modelAndView;
    }

    @GetMapping("/exploitionEntity/delete/{id}")
    public ModelAndView showDeleteForm(@PathVariable String id) {

        ExploitionEntity exploitionEntity = exploiEntityManager.findById(id);
        ModelAndView modelAndView = new ModelAndView("");
        modelAndView.addObject("exploitionEntity", exploitionEntity);
        return modelAndView;
    }

    @PostMapping("/exploitionEntity/delete")
    public ModelAndView delete(@ModelAttribute("exploitionEntity") ExploitionEntity exploitionEntity) {
        ModelAndView modelAndView = new ModelAndView("");
        exploiEntityManager.removeExploition(exploitionEntity.getId());
        modelAndView.addObject("message", "success");
        return modelAndView;
    }

    @GetMapping("/exploitionEntity/view/{id}")
    public ModelAndView show(@PathVariable String id) {
        ExploitionEntity exploitionEntity = exploiEntityManager.findById(id);
        ModelAndView modelAndView = new ModelAndView("");
        modelAndView.addObject("exploitionEntity", exploitionEntity);

        return modelAndView;
    }

}
